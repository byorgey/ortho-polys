Some ideas for how to draw OPs.

- Physics-based model.  Angles are rigid, edges are springs that want
  to be 1 unit long?  Find crossings etc. and force things apart, in
  the right direction to get uncrossed.

- Start with valid drawing based on halving etc., then relax subject
  to no crossings.

- Use a SAT solver---encode all the relevant constraints, then let it
  find a satisfying assignment.  Or use ILP solver---since we don't
  just want *satisfying* assignment but we want an optimal one.  Can
  probably find a way to express all constraints in terms of
  inequalities.

- Something else?  Is there an analytic solution?


Project description written for Faisal:

Drawing Orthogonal Polygons

An orthogonal polygon is one where all the angles are right angles.
Based on some previous work of a colleague and myself, we know how to
generate all possible orthogonal polygons.  However, they are
generated in a format that just tells you a list of right and left
turns, like RRLLRLLLLLLL.  The goal is to take such descriptions and
turn them into "nice" drawings.  This is not as trivial as you might
think.  The problem is that we have to pick a length for each edge so
that the polygon never crosses itself.  I have several ideas, but not
enough time to try them out.  If we find a drawing algorithm that
works well, the ultimate goal would be to be able to make
images/posters with e.g. all 280 of the orthogonal polygons with 16
edges.

It is a little hard to describe this via email; if you want to discuss
it I would be happy to draw you lots of pictures on my blackboard to
give you an idea what this is really about.

Obviously this is not "practical" in any real sense; the motivation is
mostly that it is a fun problem and should result in some pretty
pictures.  However, it does relate to graph drawing which is a big
area with important applications; we might learn something interesting
which would transfer to that domain.

Note this could be implemented in whatever programming language you
want.

* Expressing constraints as linear inequalities?

  - Have x and y coordinates for each corner; restricted to integers.
  - Inequality for adjacent pairs, e.g.  x3 + 1 <= x4  and so on.
    This enforces that each edge has positive length.
  - How to enforce no crossings though?  "Two edges do not cross":

    
